{"version":3,"sources":["utils/constants.js","components/core/Type.js","components/core/Loader.js","components/AlertCard.js","redux/actions/PageControlActions.js","redux/types/PageControlType.js","components/MovieTable.js","utils/networking.js","redux/actions/SearchMoviesAction.js","redux/types/SearchMoviesType.js","components/SearchBar.js","components/DetailCard.js","pages/MainPage.js","redux/actions/SearchByIdAction.js","redux/types/SearchByIdType.js","pages/DetailPage.js","pages/NotFound.js","routes/AppRoute.js","redux/reducers/index.js","redux/reducers/SearchMoviesReducer.js","redux/reducers/SearchByIdReducer.js","redux/reducers/PageControlReducer.js","redux/store/index.js","App.js","serviceWorker.js","index.js"],"names":["SEARCH_TYPES","id","name","value","Type","Badge","color","find","item","props","type","React","Component","Loader","className","role","AlertCard","Container","Alert","msg","pageDecrease","payload","pageIncrease","pageReset","MovieTable","state","tableHeader","searchMovies","searchError","searchList","totalPage","page","fecthMoviesData","setState","handlePagination","totalResult","parseInt","this","prevProps","prevState","snapshot","fluid","Table","hover","map","key","movie","index","imdbID","to","Title","Year","pageCount","Button","onClick","connect","SearchMoviesReducer","PageControlReducer","dispatch","bindActionCreators","axiosBase","axios","create","params","apikey","r","get","then","data","status","catch","error","SearchBar","y","s","Row","Col","xs","md","onChange","e","target","Input","placeholder","DetailCard","Jumbotron","imdbRating","Released","Country","src","Poster","alt","Runtime","Writer","Actors","Language","Genre","Plot","MainPage","searchById","imdbId","i","DetailPage","searchByIdResp","searchByIdError","handleRouteParams","match","split","SearchByIdReducer","AppRoute","exact","path","component","NotFound","combineReducers","action","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.e8824ed9.chunk.js","sourcesContent":["export const API_KEY = \"cb96dbf1\"\nexport const API_URL =\"https://www.omdbapi.com\";\n\nexport const SEARCH_TYPES =[\n    {id : 0 , name:\"Hepsi\" ,value:\"\"},\n    {id : 1 , name:\"Film\" ,value:\"movie\"},\n    {id : 2 , name:\"Dizi\" ,value:\"series\"},\n    {id : 3 , name:\"Bölüm\" ,value:\"episode\"},\n    {id : 4 , name:\"Oyun\" ,value:\"game\"}\n]","import React from \"react\";\nimport {SEARCH_TYPES} from '../../utils/constants';\nimport {Badge} from 'reactstrap';\nexport default class Type extends React.Component{\n\n    render() {\n        return(\n            <Badge color=\"success\">\n                {\n                    SEARCH_TYPES.find(item => item.value === this.props.type).name\n\n                }\n            </Badge>\n        )\n    }\n}","import React from \"react\";\n\nconst Loader =()=>{\n    return(\n        <div className=\"contaier mt-5 text-center p-5\">\n            <div className=\"d-flex justify-content-center\">\n                <div className=\"spinner-grow text-success m-5\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                </div>\n                <div className=\"spinner-grow text-warning m-5\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                </div>\n                <div className=\"spinner-grow text-danger m-5\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Loader;","import React from \"react\";\nimport {Alert,Container} from 'reactstrap';\nconst AlertCard =(props)=>{\n    return(\n        <Container>\n            <Alert className={\"mt-5\"} color={props.type? props.type :\"info\"}>\n                {props.msg?props.msg:\"Lütfen bir mesaj giriniz\"}\n            </Alert>\n        </Container>\n\n    )\n}\nexport default AlertCard;","import {PAGE_DECREASE,PAGE_INCREASE,PAGE_RESET} from '../types/PageControlType'\n\nexport const pageDecrease = ()=>({\n    type : PAGE_DECREASE,\n    payload :1\n});\n\nexport const pageIncrease = ()=>({\n    type : PAGE_INCREASE,\n    payload :1\n});\n\nexport const pageReset = ()=>({\n    type : PAGE_RESET\n});\n\n","export const PAGE_DECREASE = \"PAGE_DECREASE\";\nexport const PAGE_INCREASE = \"PAGE_INCREASE\";\nexport const PAGE_RESET =\"PAGE_RESET\";","import React from 'react';\nimport {Container,\n    Table,\n    Badge,\n    Button} from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {Type} from './core'\nimport AlertCard from './AlertCard'\nimport {bindActionCreators} from \"redux\";\nimport {pageDecrease,pageIncrease} from '../redux/actions/PageControlActions'\nclass MovieTable extends React.Component {\n    state={\n        tableHeader :['IMDB Id','Film/Dizi Adı','Yıl','Tip'],\n        searchMovies : [],\n        searchError : null,\n        searchList : [],\n        totalPage : null,\n        page : null\n    }\n    componentDidMount() {\n        const {searchMovies ,searchError} = this.props;\n        if (searchMovies || searchError){\n            this.fecthMoviesData()\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const {searchMovies ,searchError} = this.props;\n        if (searchMovies !== prevProps.searchMovies || searchError !== prevProps.searchError ){\n            this.fecthMoviesData()\n        }\n\n    }\n\n    fecthMoviesData =()=>{\n        const {searchMovies ,searchError} = this.props;\n        let searchList = searchMovies[\"Search\"]\n        this.setState({\n            searchMovies,\n            searchError,\n            searchList\n        })\n        this.handlePagination();\n\n    }\n\n    handlePagination =()=>{\n       const {searchMovies} = this.state;\n       if( searchMovies && searchMovies[\"Response\"] ===\"True\"){\n            let totalResult = parseInt(searchMovies[\"totalResults\"])\n           this.setState({totalPage : totalResult/10})\n       }\n\n    }\n\n    render() {\n        return (\n            <Container fluid>\n                {\n                    this.state.searchList\n                        ?<div>\n                            <Table hover>\n                            <thead className=\"bg-dark text-light\">\n                            <tr>\n                                {\n                                    this.state.tableHeader.map(item=>{\n                                        return (<th key={item}> {item} </th>)\n                                    })\n                                }\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {\n                                this.state.searchList.map((movie,index) => {\n                                    return(\n                                        <tr key={index}>\n                                            <td>\n                                                <Badge className=\"badge badge-pill\" color={\"warning\"}>\n                                                    {movie.imdbID}\n                                                </Badge>\n                                            </td>\n                                            <td><Link to={\"/movies-app-for-react/detay/\" + movie.imdbID+ \"-\" + movie.Title+ \"-detayi\"} >{movie.Title}</Link></td>\n                                            <td>\n                                                <Badge className=\"badge badge-pill\" color={\"info\"}>\n                                                    {movie.Year}\n                                                </Badge>\n                                            </td>\n                                            <td> <Type type ={movie.Type}/> </td>\n\n                                        </tr>\n                                    )\n                                })\n\n                            }\n\n\n                            </tbody>\n                        </Table>\n                            {\n                                parseInt(this.state.searchMovies[\"totalResults\"]) > 10 &&\n                                <div className=\"mt-3 mb-5\">\n                                    <p>Toplam <b>{this.state.searchMovies[\"totalResults\"]}</b> kayıt bulunmaktadır.</p>\n                                    <p> <b>{(this.props.pageCount *10)}\n                                            -\n                                        {(this.props.pageCount + 1) *10}\n                                    </b> arası kayıtlar görüntülenmektedir.</p>\n                                    {\n                                        this.props.pageCount >0 &&\n                                        <Button\n                                            onClick={()=>this.props.pageDecrease()}\n                                            className=\"mr-3\" color={\"warning\"}>Bir Önceki Kayıtlar</Button>\n                                    }\n                                    {\n                                       this.props.pageCount < parseInt(this.state.searchMovies[\"totalResults\"])/10 &&\n                                       <Button onClick={()=>this.props.pageIncrease()} color={\"warning\"}>Bir Sonraki Kayıtlar</Button>\n                                    }\n\n\n                                </div>\n                            }\n\n\n\n                        </div>\n                        : <AlertCard msg={\"Filtrelere uygun sonuç bulunamadı.\"} type={\"danger\"} />\n                }\n\n            </Container>\n\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        searchMovies: state.SearchMoviesReducer.searchMovies,\n        searchError: state.SearchMoviesReducer.searchError,\n        pageCount : state.PageControlReducer\n\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return bindActionCreators({\n        pageDecrease,\n        pageIncrease\n    }, dispatch);\n};\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(MovieTable);","import axios from 'axios';\nimport * as constans from './constants';\nconst axiosBase = axios.create({\n    params :{\n        apikey : constans.API_KEY,\n        r:\"json\"\n    }\n});\n\nexport const get = (params)=>{\n    return axiosBase.get(\n        constans.API_URL,\n        {\n        params : params\n    })\n};","import {get} from '../../utils/networking'\nimport {SEARCH_MOVIE_SUCCESS,SEARCH_MOVIE_FAILURE} from '../types/SearchMoviesType';\nexport const searchMovies = (params) => {\n    return dispatch => {\n        return get(params)\n            .then(({data, status}) => {\n                if (status !== 200) {\n                    throw data;\n                }\n              //  console.log(data)\n\n                dispatch({\n                    type: SEARCH_MOVIE_SUCCESS,\n                    payload: data\n                });\n            })\n            .catch(error => {\n                dispatch({\n                    type: SEARCH_MOVIE_FAILURE,\n                    payload: error\n                });\n            });\n    }\n};","export const SEARCH_MOVIE_SUCCESS =\"SEARCH_MOVIE_SUCCESS\";\nexport const SEARCH_MOVIE_FAILURE =\"SEARCH_MOVIE_FAILURE\";","import React from \"react\";\nimport {Input,Button,Container,Col,Row} from 'reactstrap';\nimport {SEARCH_TYPES} from '../utils/constants'\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport {searchMovies} from '../redux/actions/SearchMoviesAction';\nimport {pageReset} from '../redux/actions/PageControlActions';\nclass SearchBar extends React.Component{\n    state ={\n        type : null,\n        y: null,\n        s: \"Pokemon\",\n        params : null,\n        page : 0\n\n    }\n    searchMovies = ()=>{\n        let params = {\n            s : this.state.s,\n            type: this.state.type,\n            y : (this.state.y)?this.state.y :null,\n            page : this.state.page === 0 ?null :this.state.page\n        }\n        this.setState({params})\n        this.props.searchMovies(params);\n\n    }\n    componentDidMount() {\n        this.searchMovies();\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const {pageCount} = this.props;\n        const {s} = this.state;\n        if (pageCount !== prevProps.pageCount){\n           this.setState({page : pageCount})\n            this.searchMovies()\n        }\n        if (s !== prevState.s){\n           this.props.pageReset()\n        }\n\n    }\n\n    render(){\n        return(\n            <Container>\n                <Row className=\" d-flex justify-content-center\">\n                    <Col className=\"mt-2 mt-md-0\" xs={12} md={2} >\n                        <select\n                            onChange={e => this.setState({type : e.target.value})}\n                            className=\"form-control rounded-0\">\n                            {\n                                SEARCH_TYPES.map(item =>{\n                                  return  (<option\n                                          key={item.id}\n                                          value={item.value} >{item.name}</option>)\n                                })\n                            }\n\n                        </select>\n                    </Col>\n                    <Col className=\"mt-2 mt-md-0\" xs={12} md={2} >\n                        <Input\n                            onChange={e => this.setState({y: parseInt(e.target.value)})}\n                            className=\"rounded-0\"\n                            type=\"number\"\n                            placeholder={\"Yıl\"} />\n                    </Col>\n                    <Col className=\"mt-2 mt-md-0\" xs={12} md={6} >\n                        <Input\n                            value={this.state.s}\n                            onChange={e => this.setState({s:e.target.value})}\n                            className=\"rounded-0\"\n                            placeholder={\"Flim ,Dizi ,Bölüm ,Oyun Adı\"} />\n                    </Col>\n                    <Col className=\"mt-2 mt-md-0\" xs={12} md={2}>\n                        <Button\n                            onClick={this.searchMovies}\n                            className=\"w-100 rounded-0\"\n                            color={\"success\"}>Bul</Button>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return bindActionCreators({\n        searchMovies,\n        pageReset\n    }, dispatch);\n};\nconst mapStateToProps = state => {\n    return {\n        pageCount : state.PageControlReducer\n\n    };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(SearchBar);","import React from 'react';\nimport {Container,Row,Col,Jumbotron,Badge} from 'reactstrap';\nimport {Type} from './core'\nimport {Link} from 'react-router-dom';\nconst DetailCard =(props)=>{\n        return(\n            <Container fluid>\n            <Row className=\"mt-3\">\n                <Col xs={12} >\n                    <Jumbotron className=\" bg-dark text-light\">\n                        <h1>{props.data.Title} <Badge className=\"small\" color={\"warning\"}>\n                            {props.data.imdbRating}\n                        </Badge> </h1>\n                        <h5>{props.data.Released} - {props.data.Country}</h5>\n                    </Jumbotron>\n                </Col>\n            </Row>\n                <Link className=\"btn btn-warning\" to={\"/movies-app-for-react/\"} >&#8592;  Anasayfa </Link>\n                <Row className=\"mt-4\">\n                    <Col xs={12} md={3}>\n                        <img className=\"img-thumbnail\" src={props.data.Poster}\n                             alt =\"image\"\n                        />\n                    </Col>\n                    <Col xs={12} md={6}>\n                        <h3>{props.data.Title} <Type type={props.data.Type}/></h3>\n                        <p className=\"mt-5\">\n                            <b>Süre :</b> {props.data.Runtime}\n                        </p>\n                        <p >\n                            <b>Yazar :</b> {props.data.Writer}\n                        </p>\n                        <p>\n                            <b>Aktörler :</b> {props.data.Actors}\n                        </p>\n                        <p>\n                            <b>Dil :</b> {props.data.Language}\n                        </p>\n                        <p>\n                            <b>Yıl :</b> {props.data.Year}\n                        </p>\n                        <p>\n                            <b>Tür :</b> {props.data.Genre}\n                        </p>\n                        <p>\n                            <b>Tanıtım :</b>  {props.data.Plot}\n                        </p>\n\n                    </Col>\n\n                </Row>\n\n            </Container>\n    );\n}\nexport default DetailCard;","import React from 'react';\nimport {SearchBar,MovieTable} from '../components';\nimport {Container,Row,Col} from 'reactstrap';\nclass MainPage extends React.Component{\n\n    render(){\n        return(\n                <Container fluid className=\"mt-5\">\n                    <Row className=\"mt-3 d-flex justify-content-center\" >\n                        <Col  xs={12} md={8}>\n                           <SearchBar/>\n                        </Col>\n                    </Row>\n                    <hr/>\n                    <Row>\n                        <Col xs={12}>\n                            <MovieTable/>\n                        </Col>\n                    </Row>\n                </Container>\n        )\n    }\n}\nexport default MainPage;","import {get} from '../../utils/networking'\nimport {SEARCH_BY_ID_FAILURE,SEARCH_BY_ID_SUCCESS} from '../types/SearchByIdType';\nexport const searchById = (imdbId) => {\n    return dispatch => {\n        return get({i : imdbId})\n            .then(({data, status}) => {\n                if (status !== 200) {\n                    throw data;\n                }\n                //console.log(imdbId,data)\n\n                dispatch({\n                    type: SEARCH_BY_ID_SUCCESS,\n                    payload: data\n                });\n            })\n            .catch(error => {\n                dispatch({\n                    type: SEARCH_BY_ID_FAILURE,\n                    payload: error\n                });\n            });\n    }\n};","export const SEARCH_BY_ID_SUCCESS =\"SEARCH_BY_ID_SUCCESS\";\nexport const SEARCH_BY_ID_FAILURE =\"SEARCH_BY_ID_FAILURE\";","import React from 'react';\nimport {searchById} from '../redux/actions/SearchByIdAction'\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport {DetailCard,AlertCard} from '../components';\nimport {Loader} from '../components/core';\nclass DetailPage extends React.Component{\n\n    state ={\n        searchByIdResp : null,\n        searchByIdError : null\n\n    }\n    componentDidMount() {\n        this.handleRouteParams()\n    }\n\n    handleRouteParams(){\n       let imdbId = this.props.match.params.movie.split(\"-\")[0] ;\n       this.props.searchById(imdbId);\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const {searchByIdResp ,searchByIdError} = this.props;\n        if (searchByIdResp !== prevProps.searchByIdResp || searchByIdError !== prevProps.searchByIdError ){\n           this.handleRouteParams()\n            this.setState({searchByIdResp , searchByIdError})\n        }\n    }\n\n    render(){\n\n        return(\n\n            !this.state.searchByIdResp\n            ? <Loader/>\n            :this.state.searchByIdError\n            ?<AlertCard msg={\"Sitemsel Hata ERR38.\"} type={\"danger\"} />\n            :this.state.searchByIdResp && this.state.searchByIdResp[\"Response\"] ===\"True\"\n            ?<DetailCard data ={this.state.searchByIdResp} />\n            :<AlertCard msg =\"Böyle bir sonuç mevcut değil\" />\n\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        searchByIdResp: state.SearchByIdReducer.searchByIdResp,\n        searchByIdError: state.SearchByIdReducer.searchByIdError\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return bindActionCreators({\n        searchById,\n    }, dispatch);\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(DetailPage);","import React from 'react';\nimport {Container,Jumbotron} from 'reactstrap';\nimport {Link} from \"react-router-dom\";\nclass MainPage extends React.Component{\n\n    render(){\n        return(\n            <Container fluid className=\"mt-5 d-flex justify-content-center\" >\n               <Jumbotron>\n                   Malesef Böyle Bir Sayfa Mevcut Değil\n                   <br/>\n                   Anasayfa dönmek için <b><Link to=\"/movies-app-for-react/\">tıklayınız.</Link></b>\n               </Jumbotron>\n            </Container>\n        )\n    }\n}\nexport default MainPage;","import React from 'react';\nimport {Route,Switch} from 'react-router'\nimport {MainPage,DetailPage,NotFound} from '../pages'\n\nconst AppRoute = ()=>{\n    return(\n\n            <Switch>\n                <Route exact path=\"/movies-app-for-react/\" component={MainPage} />\n                <Route path=\"/movies-app-for-react/detay/:movie\" component={DetailPage} />\n                <Route component={NotFound}/>\n            </Switch>\n\n    )\n}\n\nexport default AppRoute;","import {combineReducers} from 'redux';\nimport {SearchMoviesReducer} from './SearchMoviesReducer';\nimport {SearchByIdReducer} from './SearchByIdReducer'\nimport {PageControlReducer} from './PageControlReducer';\n//import reducers\nexport default combineReducers({\n//reducers\n    SearchMoviesReducer,\n    SearchByIdReducer,\n    PageControlReducer\n});","import {SEARCH_MOVIE_FAILURE,SEARCH_MOVIE_SUCCESS} from '../types/SearchMoviesType'\nexport const SearchMoviesReducer =(state={},action)=>{\n    switch (action.type){\n        case SEARCH_MOVIE_SUCCESS:\n            return {...state,searchMovies : action.payload};\n        case SEARCH_MOVIE_FAILURE:\n            return {...state,searchError : action.payload};\n        default:\n            return state;\n\n    }\n};","import {SEARCH_BY_ID_SUCCESS,SEARCH_BY_ID_FAILURE} from '../types/SearchByIdType'\nexport const SearchByIdReducer =(state={},action)=>{\n    switch (action.type){\n        case SEARCH_BY_ID_SUCCESS:\n            return {...state,searchByIdResp : action.payload};\n        case SEARCH_BY_ID_FAILURE:\n            return {...state,searchByIdError : action.payload};\n        default:\n            return state;\n\n    }\n};","import {PAGE_DECREASE,PAGE_INCREASE,PAGE_RESET} from '../types/PageControlType'\nexport const PageControlReducer = (state = 0, action) => {\n    switch (action.type) {\n        case PAGE_INCREASE:\n            return  state + action.payload;\n        case PAGE_DECREASE:\n            return  state - action.payload;\n        case PAGE_RESET:\n            return  state - state;\n        default:\n            return state;\n    }\n};\n","import thunkMiddleware from 'redux-thunk';\nimport {createStore,applyMiddleware} from 'redux';\nimport rootReducer from '../reducers';\nconst store = createStore(\n    rootReducer,\n    applyMiddleware(thunkMiddleware)\n);\n\nexport default store;","import React from 'react';\nimport {AppRoute} from './routes'\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nclass App extends React.Component{\n    render() {\n        return(\n            <Provider store={store}>\n                <AppRoute/>\n            </Provider>\n\n        )\n    }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter } from \"react-router-dom\";\nReactDOM.render(\n  <BrowserRouter>\n      <App/>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}